struct Node {
    int data;
    Node *left;
    Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};

class Solution{
    public:
    //Function to store the zig zag order traversal of tree in a list.
    vector <int> zigZagTraversal(Node* root)
    {
        vector<int> ans;
        if(root == NULL)
            return ans;
            
        queue<Node*> q;
        q.push(root);
        bool flag = true;         // l->r
        
        while(!q.empty()){
            int size = q.size();
            vector<int> ds(size);
            
            for(int i = 0 ; i < size ; i++){
                Node* node = q.front();
                q.pop();
                
                int ind = (flag) ? i : size - 1 - i;
                
                ds[ind] = node->data;
                if(node->left != NULL)
                    q.push(node->left);
                if(node->right != NULL)
                    q.push(node->right);
            }
            flag = !flag;
            for(auto i : ds)
                ans.push_back(i);
       }
        
       return ans;
    }
};
